# -*- coding: utf-8 -*-
"""pts

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1osTP_UJQjEsxgyvDXQRhZyUqaMbfG3fM

**Input pandas dan data**
"""

import pandas as pd

#tes
data = pd.read_csv("/content/vgsales.csv")
data

#menampilkan data teratas
data.head()

#menampilkan data terbawah
data.tail()

#memperlihatkan jumlah baris dan kolom
data.shape

#memperlihatkan jumlah element di data (baris * kolom)
data.size

#memperlihatkan nama-nama kolom dalam data
data.columns

#memperlihatkan tipe data tiap kolom
data.dtypes

"""**membersihkan data dari null dan duplikat**"""

#memberikan informasi lengkap tentang Data.
data.info()

#mengecek data yang double atau terduplikat
data.duplicated()

#hapus data yang terduplikat secara permannent
data.drop_duplicates(inplace = True)

#mengecek penghapusan sebelumnya
data.shape

#cek kolom yang null atau tak bernilai
data.isnull().sum()

#seaborn cek null
import seaborn as sns
sns.heatmap(data.isnull())

#isi nilai yang kosong
data['Year'].fillna(0, inplace=True)
data['Publisher'].fillna('unknown', inplace=True)

#cek
sns.heatmap(data.isnull())

#isi nilai yang kosong
data['Year'] = data['Year'].astype('int64')

#menampilkan tahun(int64) dalam bentuk diagram batang
import matplotlib.pyplot as plt
data['Year'].value_counts().plot(kind='bar')

#data genre
data['Genre'].value_counts().plot(kind='bar')

"""**Soal 1 :**
Genre game apa yang paling populer berdasarkan jumlah rata-rata penjualan global?
"""

rata2_penjualan_global = data.groupby('Genre')['Global_Sales'].mean()
rata2_penjualan_global

#rata2_penjualan_global dalam bentuk diagram
rata2_penjualan_global.plot(kind='line', color='black', figsize=(10, 6),linestyle='--', marker='o')

# Memberikan judul dan label sumbu
plt.title('Rata-Rata Penjualan Global per Genre Game', fontsize=16)
plt.xlabel('Genre', fontsize=14)
plt.ylabel('Rata-Rata Penjualan Global', fontsize=14)

# Menampilkan plot
plt.grid(axis='y')
plt.tight_layout()
plt.show()

#genre terpopuler berdasar penjualan global
genre_populer = rata2_penjualan_global.idxmax()
genre_populer

"""**Soal 2 :**
Platform apa yang memiliki rata-rata penjualan terbanyak di Eropa (EU_Sales)?
"""

rata2 = data.groupby('Platform')['EU_Sales'].mean()
rata2

# Menampilkan rata-rata penjualan Eropa untuk setiap platform dalam bentuk diagram pie
plt.figure(figsize=(10, 6))
plt.pie(rata2, labels=rata2.index, colors=['blue', 'green', 'orange', 'red'], autopct='%1.1f%%')
plt.title('Rata-Rata Penjualan Eropa per Platform Game', fontsize=16)

# Menampilkan plot
plt.axis('equal')
plt.tight_layout()
plt.show()

#plaform dengan penjualan terbanyak di eropa
platform = rata2.idxmax()
platform

"""**Soal 3 :**
Berapa total penjualan di Amerika Utara (NA_Sales) dari tahun 2000 hingga 2010?
"""

filtered_data = data[(data['Year'] >= 2000) & (data['Year'] <= 2010)]
total_sales_na = filtered_data['NA_Sales'].sum()
total_sales_na

"""**Soal 4 :**
Platform game apa yang paling banyak dijual di Jepang (JP_Sales) selama tahun 2010 hingga 2020?
"""

filtered_data = data[(data['Year'] >= 2000) & (data['Year'] <= 2010)]
rata2 = filtered_data.groupby('Platform')['JP_Sales'].sum()
rata2

#rata2 penjualan Eropa  dalam bentuk diagram
rata2.plot(kind='bar', color='red', figsize=(10, 5))

# Memberikan judul dan label sumbu
plt.title('Rata-Rata Penjualan Global per Genre Game', fontsize=16)
plt.xlabel('Platform', fontsize=10)
plt.ylabel('Rata-Rata Penjualan Eropa', fontsize=10)

# Menampilkan plot
plt.grid(axis='y')
plt.tight_layout()
plt.show()

#plaform dengan penjualan terbanyak di jepang 2000 - 2010
platform = rata2.idxmax()
platform

"""**Soal 5 :**
tampilkan semua penjualan dengan bentuk diagram pertahun
"""

#cari tahun terlama dan tahun terakhir
data.sort_values(by='Year', ascending=False, inplace=True)
year = data[(data['Year'] > 0)]
year

#kembalikan posisi awal
data.sort_values(by='Rank', ascending=False, inplace=True)

data_tahun = data[(data['Year'] >=1980) & (data['Year'] <= 2020)]

penjualan = data_tahun.groupby('Year').agg({
    'JP_Sales': 'sum',
    'EU_Sales': 'sum',
    'Other_Sales': 'sum',
    'Global_Sales': 'sum'
})
penjualan['Total_Penjualan'] = penjualan.sum(axis=1)

# Menggunakan Seaborn untuk membuat diagram garis
plt.figure(figsize=(12, 6))

# Membuat plot menggunakan Seaborn
sns.lineplot(data=penjualan[['JP_Sales', 'EU_Sales', 'Other_Sales', 'Global_Sales', 'Total_Penjualan']])

# Menambahkan judul dan label sumbu
plt.title('Penjualan Game per Tahun (1980-2020)', fontsize=16)
plt.xlabel('Genre', fontsize=14)
plt.ylabel('Penjualan (dalam jutaan unit)', fontsize=14)

plt.grid(True, linestyle='-', alpha=0.7)
plt.tight_layout()
plt.show()